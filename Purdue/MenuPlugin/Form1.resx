<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAAAAAABMLAAATCwAAAAAAAAAA
        AAAAAAAAAAAAAF4jJyFeIyeHXiMn4F4jJ/ReIyf0XiMn9F4jJ/ReIyf0XiMn9F4jJ/ReIyf0XiMn9F4j
        J/ReIyf0XiMn9F4jJ/ReIyf0XiMn9F4jJ/ReIyf0XiMn9F4jJ/ReIyf0XiMn9F4jJ/ReIyfgXiMnh14j
        JyEAAAAAAAAAAAAAAABeIyczXiMn3V4jJ/9eIyf/XiMn/14jJ/9eIyf/XiMn/14jJ/9eIyf/XiMn/14j
        J/9eIyf/XiMn/14jJ/9eIyf/XiMn/14jJ/9eIyf/XiMn/14jJ/9eIyf/XiMn/14jJ/9eIyf/XiMn/14j
        J/9eIyf/XiMn3V4jJzMAAAAAXiMnIF4jJ9teIyf/XiMn/14jJ/9eIyf/XiMn/14jJ/9eIyf/XiMn/14i
        Jv9cICT/Wx4i/1scIv9bGyL/Xh0l/18dJv9eHSX/Xh4l/14gJv9eIif/XiMn/14jJ/9eIyf/XiMn/14j
        J/9eIyf/XiMn/14jJ/9eIyf/XiMn214jJyBeIyeKXiMn/14jJ/9eIyf/XiMn/14jJ/9eIyf/XiMn/14k
        KP9aHiL/WBsf/2syN/9zSUf/cVtM/3BkT/9WXzj/VF01/1taOv9eSDX/Wjks/14lKP9fHSX/XiIn/14j
        J/9eIyf/XiMn/14jJ/9eIyf/XiMn/14jJ/9eIyf/XiMnil4jJ+FeIyf/XiMn/14jJ/9eIyf/XiMn/14j
        J/9eJCf/WRwg/2UtMf+sj5D/8Orr//r6+f/y+vP/3vri/36wd/9FqkX/SL9P/0m2Tf9Itkz/TJtF/1hQ
        Mv9fHiX/XiIn/14jJ/9eIyf/XiMn/14jJ/9eIyf/XiMn/14jJ/9eIyfhXiMn914jJ/9eIyf/XiMn/14j
        J/9eIyf/XiMn/1gbH/9uOTz/18nJ///////////////////////Eqq7/bSw3/1dDLf9KqUn/R79P/0i5
        Tf9Hvk7/SLpN/1RjN/9fHSb/XiIn/14jJ/9eIyf/XiMn/14jJ/9eIyf/XiMn/14jJ/deIyf0XiMn/14j
        J/9eIyf/XiMn/14jJ/9cISX/XyUp/9HBwv//////////////////////zLm6/1seIv9ZHCD/YBsm/1pC
        L/9Jr0v/SLtN/0i4Tf9IvE7/R7tO/1ZYNf9fHCX/XiMn/14jJ/9eIyf/XiMn/14jJ/9eIyf/XiMn9F4j
        J/ReIyf/XiMn/14jJ/9eIyf/XiMn/1YXG/+lhIb//////////////////////+ri4v9vOz7/WBsf/14j
        J/9eIyf/Xxol/1VlOP9Hv0//SLlN/0i4Tf9Iu07/SqtK/1w0K/9eICb/XiMn/14jJ/9eIyf/XiMn/14j
        J/9eIyf0XiMn9F4jJ/9eIyf/XiMn/14jJ/9ZHCD/cDw//+3n6P//////////////////////pYSH/1QV
        Gv9eIyf/XiMn/14jJ/9fICb/XSYo/02XRP9Hv0//SLhN/0i4Tf9HwU//Unk9/18cJf9eIyf/XiMn/14j
        J/9eIyf/XiMn/14jJ/ReIyf0XiMn/14jJ/9eIyf/XiMn/1YZHf+denz///////////////////////Lt
        7f9rNDj/Wx8k/14jJ/9eIyf/XiMn/14jJ/9fGiX/VWA3/0e+Tv9Hvk//R71O/0fDUP9KrUr/Wzgs/18e
        Jv9eIyf/XiMn/14jJ/9eIyf/XiMn9F4jJ/ReIyf/XiMn/14jJ/9dIib/XyQo/9XGx///////////////
        ////////waqs/1oeIv9dIyf/XiMn/14jJ/9eIyf/XiMn/14iJv9dKyn/Vl82/1NyPP9TcDv/U3E7/1J0
        PP9aOi3/Xx8m/14jJ/9eIyf/XiMn/14jJ/9eIyf0XiMn9F4jJ/9eIyf/XiMn/1wgJP9oMjX/9/T0////
        //////////////////+Wb3L/VBYb/14jJ/9eIyf/XiMn/14jJ/9eIyf/XiMn/14iJ/9fHCX/Xxsl/18b
        Jf9fGyX/Xxsl/14hJv9eIyf/XiMn/14jJ/9eIyf/XiMn/14jJ/ReIyf0XiMn/14jJ/9eIyf/WRwg/4Za
        Xf/+/f3/////////////////9/T1/39QU/9WGR3/XiMn/14jJ/9eIyf/XiMn/14jJ/9eIyf/XiMn/14j
        J/9eIyf/XiMn/14jJ/9eIyf/XiMn/14jJ/9eIyf/XiMn/14jJ/9eIyf/XiMn9F4jJ/ReIyf/XiMn/14j
        J/9XGh7/mnV4///////////////////////r5OT/c0BD/1kcIP9eIyf/XiMn/14jJ/9eIyf/XiMn/14j
        J/9eIyf/XiMn/14jJ/9eIif/Xx4m/14gJv9eIyf/XiMn/14jJ/9eIyf/XiMn/14jJ/9eIyf0XiMn9F4j
        J/9eIyf/XiMn/1YYHP+sjpD//////////////////////+DV1f9oMTX/Wx8j/14jJ/9eIyf/XiMn/14j
        J/9eIyf/XiMn/14jJ/9eIyf/XyEm/14gJv9XWDX/Wzks/14gJv9eIyf/XiMn/14jJ/9eIyf/XiMn/14j
        J/ReIyf0XiMn/14jJ/9eIyf/VRcb/7OYmv//////////////////////2MvM/2EoK/9cICT/XiMn/14j
        J/9eIyf/XiMn/14jJ/9eIyf/XiMn/14fJv9fHyb/U2s5/0fAT/9QhED/Xx4l/14iJ/9eIyf/XiMn/14j
        J/9eIyf/XiMn9F4jJ/ReIyf/XiMn/14jJ/9WGBz/q42P///////////////////////f1NX/aDE0/1sf
        I/9eIyf/XiMn/14jJ/9eIyf/XiMn/14jJ/9fHib/XiYo/1B8Pv9HvU7/SL1O/0i6Tf9XTjL/Xxwl/14j
        J/9eIyf/XiMn/14jJ/9eIyf0XiMn9F4jJ/9eIyf/XiMn/1caHv+Zc3b//////////////////////+zk
        5P90QET/WRwg/14jJ/9eIyf/XiMn/14jJ/9eIyf/Xx0l/10sKf9PjEL/R8BP/0i5Tf9IuE3/R75P/02Z
        Rf9eJyj/XiEn/14jJ/9eIyf/XiMn/14jJ/ReIyf0XiMn/14jJ/9eIyf/WRwg/4leYf/+/v7/////////
        ////////+Pb2/4FTVv9WGR3/XiMn/14jJ/9eIyf/XiMn/18dJv9bOSz/TJpF/0fBT/9IuE3/SLhN/0i4
        Tf9IuE3/R75O/1RnOf9fGyX/XiMn/14jJ/9eIyf/XiMn9F4jJ/ReIyf/XiMn/14jJ/9bHyT/bDc7//r4
        +P//////////////////////lW5w/1UXG/9eIyf/XiMn/14iJ/9fGyX/WkEv/0qnSf9Hvk7/SLhN/0i4
        Tf9IuE3/SLhN/0i4Tf9IvU7/Sq1K/1s4LP9fHSb/XiMn/14jJ/9eIyf0XiMn9F4jJ/9eIyf/XiMn/10h
        Jv9dISX/0cHC///////////////////////Aqar/Wh4i/10iJv9eIyf/Xx8m/1ZZNf9JtEz/R8JQ/0i5
        Tf9IuE3/SLhN/0i4Tf9IuE3/SLlN/0i6Tf9HwlD/UIM//18hJv9eIif/XiMn/14jJ/ReIyf0XiMn/14j
        J/9eIyf/XiMn/1YYHf+hf4H///////////////////////Hs7P9nMDP/XCAk/18eJv9ZSzH/TZhF/0yd
        R/9Mm0b/SbFL/0i5Tf9IuE3/SLhN/0i5Tf9IuU3/SbFL/0mzTP9JsEv/WUkx/18eJv9eIyf/XiMn9F4j
        J/ReIyf/XiMn/14jJ/9eIyf/WRwg/3A7P//t5+f//////////////////////6OBhP9UFhr/XiMn/10p
        KP9dKCj/XiIn/1wsKf9MnEb/R75P/0i4Tf9IuE3/R79P/1F6Pf9eJCf/XSkp/10rKf9dKCj/XiIn/14j
        J/9eIyf0XiMn9F4jJ/9eIyf/XiMn/14jJ/9eIyf/Vhgc/6eHiv//////////////////////6+Tl/3E9
        QP9XGh7/XiMn/14hJ/9gGCT/VGU4/0e+T/9IuE3/SLhN/0i8Tv9KqEn/XDEq/18fJv9eISf/XiEn/14i
        J/9eIyf/XiMn/14jJ/ReIyf0XiMn/14jJ/9eIyf/XiMn/14jJ/9cICT/YScr/9XGyP//////////////
        ////////y7m6/1whJf9bHyP/Xxwl/1lCL/9Js0v/SLpO/0i4Tf9HvE7/SLlN/1dUM/9fGyX/XiMn/14j
        J/9eIyf/XiMn/14jJ/9eIyf/XiMn9F4jJ/ReIyf/XiMn/14jJ/9eIyf/XiMn/14jJ/9ZHCD/bzs//9vO
        0P//////////////////////wqOr/2ooMv9XPyz/SqhJ/0e9Tv9Iuk7/R8BP/0i6Tv9VYzf/XyAm/14i
        J/9eIyf/XiMn/14jJ/9eIyf/XiMn/14jJ/9eIyf0XiMn914jJ/9eIyf/XiMn/14jJ/9eIyf/XiMn/14j
        J/9ZHCD/ZCww/7WZnP/o3uD//P/9/+3/8v/W/t3/g7t//0O3Sf9Fx1H/R8FP/0m0TP9Nl0X/WE0y/18d
        Jv9eIif/XiMn/14jJ/9eIyf/XiMn/14jJ/9eIyf/XiMn/14jJ/deIyfhXiMn/14jJ/9eIyf/XiMn/14j
        J/9eIyf/XiMn/14jJ/9bHyP/Vxoe/3E7QP+EXFz/dWFR/1tWOP9RVS//V1Y0/1dUM/9XUjP/WUUv/14o
        KP9fHCX/XiMn/14jJ/9eIyf/XiMn/14jJ/9eIyf/XiMn/14jJ/9eIyf/XiMn4V4jJ4peIyf/XiMn/14j
        J/9eIyf/XiMn/14jJ/9eIyf/XiMn/14jJ/9eIyf/WR0h/1YYHP9ZFx7/XRki/18aJf9fGiX/Xxol/18a
        Jf9fHCX/XiEm/14jJ/9eIyf/XiMn/14jJ/9eIyf/XiMn/14jJ/9eIyf/XiMn/14jJ/9eIyeKXiMnIF4j
        J9teIyf/XiMn/14jJ/9eIyf/XiMn/14jJ/9eIyf/XiMn/14jJ/9eIyf/XiMn/14jJ/9eIyf/XiMn/14j
        J/9eIyf/XiMn/14jJ/9eIyf/XiMn/14jJ/9eIyf/XiMn/14jJ/9eIyf/XiMn/14jJ/9eIyf/XiMn214j
        JyAAAAAAXiMnM14jJ91eIyf/XiMn/14jJ/9eIyf/XiMn/14jJ/9eIyf/XiMn/14jJ/9eIyf/XiMn/14j
        J/9eIyf/XiMn/14jJ/9eIyf/XiMn/14jJ/9eIyf/XiMn/14jJ/9eIyf/XiMn/14jJ/9eIyf/XiMn/14j
        J91eIyczAAAAAAAAAAAAAAAAXiMnIV4jJ4deIyfgXiMn9F4jJ/ReIyf0XiMn9F4jJ/ReIyf0XiMn9F4j
        J/ReIyf0XiMn9F4jJ/ReIyf0XiMn9F4jJ/ReIyf0XiMn9F4jJ/ReIyf0XiMn9F4jJ/ReIyf0XiMn9F4j
        J+BeIyeHXiMnIQAAAAAAAAAA4AAAB8AAAAOAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAACAAAABwAAAA+AAAAc=
</value>
  </data>
</root>